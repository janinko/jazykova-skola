<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
        
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>

  <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
  <!-- the transactional semantics... -->
  <tx:attributes>
    <!-- all methods starting with 'get' are read-only -->
    <tx:method name="get*" read-only="true"/>
    <!-- other methods use the default transaction settings (see below) -->
    <tx:method name="*"/>
  </tx:attributes>
  </tx:advice>
  
  <!-- ensure that the above transactional advice runs for any execution
    of an operation defined by the FooService interface -->
  <aop:config>
  <aop:pointcut id="fooServiceOperation" expression="execution(* cz.muni.fi.pa165.languageschool.services.LessonServiceImpl.*(..))"/>
  <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
  </aop:config>


    <!--tx:annotation-driven transaction-manager="transactionManager"/-->

	<!-- jdbc:embedded-database id="dataSource" type="DERBY" /-->

	<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
		<property name="url" value="jdbc:hsqldb:mem:testdb"/>
		<property name="username" value="sa"/>
		<property name="password" value=""/>
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<!--bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>cz.muni.fi.pa165.languageschool.entities.Course</value>
				<value>cz.muni.fi.pa165.languageschool.entities.Lesson</value>
				<value>cz.muni.fi.pa165.languageschool.entities.Teacher</value>
				<value>cz.muni.fi.pa165.languageschool.entities.Student</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean-->

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>cz.muni.fi.pa165.languageschool.entities.Course</value>
				<value>cz.muni.fi.pa165.languageschool.entities.Lesson</value>
				<value>cz.muni.fi.pa165.languageschool.entities.Teacher</value>
				<value>cz.muni.fi.pa165.languageschool.entities.Student</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="courseDao" class="cz.muni.fi.pa165.languageschool.DAO.HibernateCourseDaoImlp"/>

	<bean id="lessonDao" class="cz.muni.fi.pa165.languageschool.DAO.HibernateLessonDaoImlp" />

	<bean id="studentDao" class="cz.muni.fi.pa165.languageschool.DAO.HibernateStudentDaoImlp" />

	<bean id="teacherDao" class="cz.muni.fi.pa165.languageschool.DAO.HibernateTeacherDaoImlp" />

    <!--bean id="teacherService" class="cz.muni.fi.pa165.languageschool.services.TeacherServiceImpl">
        <property name="teacherDao" ref="teacherDao"/>
    </bean-->




	<!-- SERVICE BEANs -->

	<bean id="lessonService" class="cz.muni.fi.pa165.languageschool.services.LessonServiceImpl">
		<property name="lessonDao" ref="lessonDao"/>
	</bean>

	<bean id="courseService" class="cz.muni.fi.pa165.languageschool.services.CourseServiceImpl" />
		
	
</beans>
